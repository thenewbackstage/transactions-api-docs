openapi: 3.0.3
info:
  title: Data Wise - API de Transações
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://api.datawise.cloud/bi
tags:
  - name: entity
    description: Entidades/empresas
  - name: event
    description: Eventos
  - name: product
    description: Produtos
  - name: transaction
    description: Transações
  - name: user
    description: Operations about user
paths:
  /entities:
    get:
      tags:
        - entity
      summary: Lista de entidades
      description: Lista paginada de entidades
      parameters:
        - name: page
          in: query
          description: Página de registros desejada
          required: false
          schema:
            type: number
            default: 1
      responses:
        '200':
          description: Requisição realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEntities'
        '401':
          description: Usuário não autenticado
        '403':
          description: Sem permissão de acesso
        '422':
          description: Parâmetros de busca inválidos
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /entities/{entityUuid}/events:
    get:
      tags:
        - event
      summary: Lista de eventos da entidade
      description: Lista paginada de eventos com dados sobre seu tipo, local, sessões e fontes de transação
      parameters:
        - name: entityUuid
          in: path
          description: O uuid da entidade
          required: true
          schema:
            type: string
            format: uuid
            example: 0191eea5-c009-7788-a78d-ecd0322e215f
      responses:
        '200':
          description: Requisição realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEvents'
  /entities/{entityUuid}/products:
    get:
      tags:
        - product
      summary: Lista de produtos da entidade
      parameters:
        - name: entityUuid
          in: path
          description: O uuid da entidade
          required: true
          schema:
            type: string
            format: uuid
            example: 0191eea5-c009-7788-a78d-ecd0322e215f
      responses:
        '200':
          description: Requisição realizada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    example: TODO
  /transactionSources/{transactionSourceUuid}/transactions:
    get:
      tags:
        - transaction
      summary: Lista de Transações de uma Fonte de Transações
      parameters:
        - name: transactionSourceUuid
          in: path
          description: O uuid da Fonte de Transações
          required: true
          schema:
            type: string
            format: uuid
            example: 0191f2fa-c1d4-7ae3-85be-da58f0164d73
      responses:
        '200':
          description: Requisição realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactions'
      security:
        - api_key: []
  /user/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  format: email
                  example: usuario@entidade.com
                password:
                  type: string
                  example: 123456
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
components:
  schemas:
    PaginatedResponse:
      type: object
      properties:
        total: 
          type: integer
          format: int32
          example: 50
        per_page:
          type: integer
          format: int32
          example: 15
        current_page:
          type: integer
          format: int32
          example: 1
        last_page:
          type: integer
          format: int32
          example: 4
        first_page_url:
          type: string
          format: uri
          example: https://api.datawise.cloud/bi/endpoint?page=1
        last_page_url:
          type: string
          format: uri
          example: https://api.datawise.cloud/bi/endpoint?page=4
        next_page_url:
          type: string
          format: uri
          example: https://api.datawise.cloud/bi/endpoint?page=2
        prev_page_url:
          type: string
          format: uri
          example: null
        from:
          type: integer
          format: int32
          example: 1
        to:
          type: integer
          format: int32
          example: 15
    PaginatedEntities:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            data:
              type: array
              items: 
                $ref: '#/components/schemas/Entity'
    PaginatedEvents:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            data:
              type: array
              items: 
                $ref: '#/components/schemas/Event'
    PaginatedTransactions:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            data:
              type: array
              items: 
                $ref: '#/components/schemas/Transaction'
    Entity:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 0191eea5-c009-7788-a78d-ecd0322e215f
        type: 
          type: string
          description: Define se a entidade é PF ou PJ
          enum:
            - COMPANY
            - INDIVIDUAL
        name:
          type: string
          example: Nome da Empresa
        image:
          type: string
          format: uri
          example: https://api.datawise.cloud/images/branding/googlelogo/1x/googlelogo_light_color_272x92dp.png
    Event:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 0191eecd-3dec-7aae-a398-5f9290ce1db1
        name: 
          type: string
          example: Nome do Evento
        reference_date:
          example: TODO
        start:  
          example: TODO
        finish:
          example: TODO
        operation_start:
          example: TODO
        operation_finish:
          example: TODO
        created_at:
          type: string
          example: "2024-01-01 12:00:00"
        updated_at:
          type: string
          example: "2024-01-01 12:00:00"
        reference_hour:
          example: TODO
        open_at:
          example: TODO
        close_at:
          example: TODO
        event_type:
          $ref: '#/components/schemas/ChildEventType'
        place:
          $ref: '#/components/schemas/Place'
        event_sessions:
          type: array
          items:
            $ref: '#/components/schemas/EventSession'
        transaction_sources:
          type: array
          items:
            $ref: '#/components/schemas/TransactionSource'
    EventType:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 0191eed7-8de7-761c-af44-bbf672b7114c
        name:
          type: string
          example: Nome do Tipo de Evento
    ChildEventType:
      allOf:
        - $ref: '#/components/schemas/EventType'
        - type: object
          properties:
            parent:
              $ref: '#/components/schemas/EventType'
            name:
              type: string
              example: Nome do Subtipo de Evento
    Place:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 0191f2f8-7da2-7f1a-81e9-f42147cc7cab
        name:
          type: string
          example: Nome do Local
        created_at:
          type: string
          example: "2024-01-01 12:00:00"
        updated_at:
          type: string
          example: "2024-01-01 12:00:00"
    EventSession:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 0191f2f9-635d-70ba-af79-6d2a7a258c9c
        name:
          type: string
          example: Nome da Sessão
        start:
          type: string
          example: "2024-01-01 11:00:00"
        finish:
          type: string
          example: "2024-01-01 13:00:00"
        created_at:
          type: string
          example: "2024-01-01 12:00:00"
        updated_at:
          type: string
          example: "2024-01-01 12:00:00"
    TransactionSource:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 0191f2fa-c1d4-7ae3-85be-da58f0164d73
        name:
          type: string
          example: Nome da Fonte de Transações
        created_at:
          type: string
          example: "2024-01-01 12:00:00"
        updated_at:
          type: string
          example: "2024-01-01 12:00:00"
    Transaction:
      type: object
      properties:
        activation_tax:
          example: TODO
        bonus:
          example: TODO
        chip:
          example: TODO
        confirmation_date:
          type: string
          example: "2024-01-01 12:00:00"
        date:
          type: string
          example: "2024-01-01 11:59:50"
        event_session_uuid:
          type: string
          format: uuid
          example: 0191f2f9-635d-70ba-af79-6d2a7a258c9c
        external_id:
          type: string
          example: TODO
        operation:
          example: TODO
        operator:
          example: TODO
        point_of_sale_type: 
          example: TODO
        point_of_sale_code:
          example: TODO
        point_of_sale_name:
          example: TODO
        register_date:
          type: string
          example: "2024-01-01 12:01:00"
        status:
          example: TODO
        terminal:
          example: TODO
        total_value:
          example: TODO
        transaction_items:
          type: array
          items:
            $ref: '#/components/schemas/TransactionItem'
        uuid:
          type: string
          format: uuid
          example: 0191f302-7541-7f8f-9ca3-e5b78d11bf15
    TransactionItem:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 0191f31c-aa49-7cbc-b1c7-1344e9f46660
        value: 
          example: TODO
        quantity:
          example: TODO
        unitary_value:
          example: TODO
        entity_product_uuid:
          type: string
          format: uuid
          example: 0191f31d-98cc-7190-ad9e-96565f10abb5
        entity_product_name:
          type: string
          example: Nome do Produto
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
